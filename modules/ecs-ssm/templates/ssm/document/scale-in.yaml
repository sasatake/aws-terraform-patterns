description: |-
  # ECSサービスをスケールインする
  * ECSサービスのタスクサイズを取得する
    * タスクサイズが1より大きい場合は処理を継続する
    * タスクサイズが1以下の場合は処理を終了する
  * ECSサービスを更新する(ECSタスクサイズ数を1にする)
  * 取得したECSタスクサイズの型を数値から文字列へ変換する
  * 取得したECSタスクサイズをSSMパラメータに保管する
  * 処理を終了する
schemaVersion: "0.3"
mainSteps:
  - name: GetCurrentEcsServiceTaskSize
    action: "aws:executeAwsApi"
    inputs:
      Service: ecs
      Api: DescribeServices
      cluster: sasatake-test-ecscls-nginx
      services:
        - sasatake-test-ecssrv-nginx
    outputs:
      - Name: task_size
        Selector: $.services[0].desiredCount
        Type: Integer
  - name: CheckEcsServiceTaskSize
    action: aws:branch
    inputs:
      Choices:
        - NextStep: UpdateEcsServiceTaskSize
          Variable: "{{ GetCurrentEcsServiceTaskSize.task_size }}"
          NumericGreater: 1
      Default: Finish
  - name: UpdateEcsServiceTaskSize
    action: "aws:executeAwsApi"
    inputs:
      Service: ecs
      Api: UpdateService
      desiredCount: 1
      service: sasatake-test-ecssrv-nginx
      cluster: sasatake-test-ecscls-nginx
      forceNewDeployment: true
  - name: ConvertEcsServiceTaskSizeType
    action: "aws:executeScript"
    inputs:
      Runtime: "python3.7"
      Handler: "script_handler"
      InputPayload:
        "value": "{{ GetCurrentEcsServiceTaskSize.task_size }}"
      Script: |-
        def script_handler(events, context):
          return str(events['value'])
    outputs:
      - Name: task_size
        Selector: $.Payload
        Type: String
  - name: PutEcsServiceTaskSizeParameter
    action: "aws:executeAwsApi"
    inputs:
      Service: ssm
      Api: PutParameter
      Name: sasatake-test-param-ecssrv-nginx-task-size
      Value: "{{ ConvertEcsServiceTaskSizeType.task_size }}"
      Overwrite: true
  - name: Finish
    action: aws:sleep
    inputs:
      Duration: PT1S
